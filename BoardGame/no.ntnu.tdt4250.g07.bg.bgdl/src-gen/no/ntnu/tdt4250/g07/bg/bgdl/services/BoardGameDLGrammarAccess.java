/*
 * generated by Xtext 2.35.0
 */
package no.ntnu.tdt4250.g07.bg.bgdl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class BoardGameDLGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class BoardGameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.ntnu.tdt4250.g07.bg.bgdl.BoardGameDL.BoardGame");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBoardGameKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cSizeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSizeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSizeEIntParserRuleCall_3_0 = (RuleCall)cSizeAssignment_3.eContents().get(0);
		private final Keyword cPiecetypesKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cPiecetypesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cPiecetypesPieceTypeParserRuleCall_6_0 = (RuleCall)cPiecetypesAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cPiecetypesAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cPiecetypesPieceTypeParserRuleCall_7_1_0 = (RuleCall)cPiecetypesAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCellstatesKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cCellstatesAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cCellstatesCellStateParserRuleCall_9_2_0 = (RuleCall)cCellstatesAssignment_9_2.eContents().get(0);
		private final Group cGroup_9_3 = (Group)cGroup_9.eContents().get(3);
		private final Keyword cCommaKeyword_9_3_0 = (Keyword)cGroup_9_3.eContents().get(0);
		private final Assignment cCellstatesAssignment_9_3_1 = (Assignment)cGroup_9_3.eContents().get(1);
		private final RuleCall cCellstatesCellStateParserRuleCall_9_3_1_0 = (RuleCall)cCellstatesAssignment_9_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9_4 = (Keyword)cGroup_9.eContents().get(4);
		private final Keyword cWinConditionsKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cLeftCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cWinConditionsAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cWinConditionsWinConditionParserRuleCall_12_0 = (RuleCall)cWinConditionsAssignment_12.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cCommaKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cWinConditionsAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cWinConditionsWinConditionParserRuleCall_13_1_0 = (RuleCall)cWinConditionsAssignment_13_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cRightCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		
		//BoardGame returns BoardGame:
		//    'BoardGame'
		//    '{'
		//        'size' size=EInt
		//        'piecetypes' '{' piecetypes+=PieceType ( "," piecetypes+=PieceType)* '}'
		//        ('cellstates' '{' cellstates+=CellState ( "," cellstates+=CellState)* '}' )?
		//        'winConditions' '{' winConditions+=WinCondition ( "," winConditions+=WinCondition)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'BoardGame'
		//'{'
		//    'size' size=EInt
		//    'piecetypes' '{' piecetypes+=PieceType ( "," piecetypes+=PieceType)* '}'
		//    ('cellstates' '{' cellstates+=CellState ( "," cellstates+=CellState)* '}' )?
		//    'winConditions' '{' winConditions+=WinCondition ( "," winConditions+=WinCondition)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'BoardGame'
		public Keyword getBoardGameKeyword_0() { return cBoardGameKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'size'
		public Keyword getSizeKeyword_2() { return cSizeKeyword_2; }
		
		//size=EInt
		public Assignment getSizeAssignment_3() { return cSizeAssignment_3; }
		
		//EInt
		public RuleCall getSizeEIntParserRuleCall_3_0() { return cSizeEIntParserRuleCall_3_0; }
		
		//'piecetypes'
		public Keyword getPiecetypesKeyword_4() { return cPiecetypesKeyword_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//piecetypes+=PieceType
		public Assignment getPiecetypesAssignment_6() { return cPiecetypesAssignment_6; }
		
		//PieceType
		public RuleCall getPiecetypesPieceTypeParserRuleCall_6_0() { return cPiecetypesPieceTypeParserRuleCall_6_0; }
		
		//( "," piecetypes+=PieceType)*
		public Group getGroup_7() { return cGroup_7; }
		
		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//piecetypes+=PieceType
		public Assignment getPiecetypesAssignment_7_1() { return cPiecetypesAssignment_7_1; }
		
		//PieceType
		public RuleCall getPiecetypesPieceTypeParserRuleCall_7_1_0() { return cPiecetypesPieceTypeParserRuleCall_7_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//('cellstates' '{' cellstates+=CellState ( "," cellstates+=CellState)* '}' )?
		public Group getGroup_9() { return cGroup_9; }
		
		//'cellstates'
		public Keyword getCellstatesKeyword_9_0() { return cCellstatesKeyword_9_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9_1() { return cLeftCurlyBracketKeyword_9_1; }
		
		//cellstates+=CellState
		public Assignment getCellstatesAssignment_9_2() { return cCellstatesAssignment_9_2; }
		
		//CellState
		public RuleCall getCellstatesCellStateParserRuleCall_9_2_0() { return cCellstatesCellStateParserRuleCall_9_2_0; }
		
		//( "," cellstates+=CellState)*
		public Group getGroup_9_3() { return cGroup_9_3; }
		
		//","
		public Keyword getCommaKeyword_9_3_0() { return cCommaKeyword_9_3_0; }
		
		//cellstates+=CellState
		public Assignment getCellstatesAssignment_9_3_1() { return cCellstatesAssignment_9_3_1; }
		
		//CellState
		public RuleCall getCellstatesCellStateParserRuleCall_9_3_1_0() { return cCellstatesCellStateParserRuleCall_9_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9_4() { return cRightCurlyBracketKeyword_9_4; }
		
		//'winConditions'
		public Keyword getWinConditionsKeyword_10() { return cWinConditionsKeyword_10; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_11() { return cLeftCurlyBracketKeyword_11; }
		
		//winConditions+=WinCondition
		public Assignment getWinConditionsAssignment_12() { return cWinConditionsAssignment_12; }
		
		//WinCondition
		public RuleCall getWinConditionsWinConditionParserRuleCall_12_0() { return cWinConditionsWinConditionParserRuleCall_12_0; }
		
		//( "," winConditions+=WinCondition)*
		public Group getGroup_13() { return cGroup_13; }
		
		//","
		public Keyword getCommaKeyword_13_0() { return cCommaKeyword_13_0; }
		
		//winConditions+=WinCondition
		public Assignment getWinConditionsAssignment_13_1() { return cWinConditionsAssignment_13_1; }
		
		//WinCondition
		public RuleCall getWinConditionsWinConditionParserRuleCall_13_1_0() { return cWinConditionsWinConditionParserRuleCall_13_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_15() { return cRightCurlyBracketKeyword_15; }
	}
	public class PieceTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.ntnu.tdt4250.g07.bg.bgdl.BoardGameDL.PieceType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPieceTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSymbolKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSymbolAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSymbolEStringParserRuleCall_4_0 = (RuleCall)cSymbolAssignment_4.eContents().get(0);
		private final Keyword cValidmovesKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cValidmovesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValidmovesValidMoveParserRuleCall_7_0 = (RuleCall)cValidmovesAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cValidmovesAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cValidmovesValidMoveParserRuleCall_8_1_0 = (RuleCall)cValidmovesAssignment_8_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cEffectsoncellKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cEffectsoncellAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cEffectsoncellEffectOnCellParserRuleCall_10_2_0 = (RuleCall)cEffectsoncellAssignment_10_2.eContents().get(0);
		private final Group cGroup_10_3 = (Group)cGroup_10.eContents().get(3);
		private final Keyword cCommaKeyword_10_3_0 = (Keyword)cGroup_10_3.eContents().get(0);
		private final Assignment cEffectsoncellAssignment_10_3_1 = (Assignment)cGroup_10_3.eContents().get(1);
		private final RuleCall cEffectsoncellEffectOnCellParserRuleCall_10_3_1_0 = (RuleCall)cEffectsoncellAssignment_10_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10_4 = (Keyword)cGroup_10.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//PieceType returns PieceType:
		//    'PieceType'
		//    name=EString
		//    '{'
		//        'symbol' symbol=EString
		//        'validmoves' '{' validmoves+=ValidMove ( "," validmoves+=ValidMove)* '}'
		//        ('effectsoncell' '{' effectsoncell+=EffectOnCell ( "," effectsoncell+=EffectOnCell)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'PieceType'
		//name=EString
		//'{'
		//    'symbol' symbol=EString
		//    'validmoves' '{' validmoves+=ValidMove ( "," validmoves+=ValidMove)* '}'
		//    ('effectsoncell' '{' effectsoncell+=EffectOnCell ( "," effectsoncell+=EffectOnCell)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'PieceType'
		public Keyword getPieceTypeKeyword_0() { return cPieceTypeKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'symbol'
		public Keyword getSymbolKeyword_3() { return cSymbolKeyword_3; }
		
		//symbol=EString
		public Assignment getSymbolAssignment_4() { return cSymbolAssignment_4; }
		
		//EString
		public RuleCall getSymbolEStringParserRuleCall_4_0() { return cSymbolEStringParserRuleCall_4_0; }
		
		//'validmoves'
		public Keyword getValidmovesKeyword_5() { return cValidmovesKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//validmoves+=ValidMove
		public Assignment getValidmovesAssignment_7() { return cValidmovesAssignment_7; }
		
		//ValidMove
		public RuleCall getValidmovesValidMoveParserRuleCall_7_0() { return cValidmovesValidMoveParserRuleCall_7_0; }
		
		//( "," validmoves+=ValidMove)*
		public Group getGroup_8() { return cGroup_8; }
		
		//","
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }
		
		//validmoves+=ValidMove
		public Assignment getValidmovesAssignment_8_1() { return cValidmovesAssignment_8_1; }
		
		//ValidMove
		public RuleCall getValidmovesValidMoveParserRuleCall_8_1_0() { return cValidmovesValidMoveParserRuleCall_8_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
		
		//('effectsoncell' '{' effectsoncell+=EffectOnCell ( "," effectsoncell+=EffectOnCell)* '}' )?
		public Group getGroup_10() { return cGroup_10; }
		
		//'effectsoncell'
		public Keyword getEffectsoncellKeyword_10_0() { return cEffectsoncellKeyword_10_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10_1() { return cLeftCurlyBracketKeyword_10_1; }
		
		//effectsoncell+=EffectOnCell
		public Assignment getEffectsoncellAssignment_10_2() { return cEffectsoncellAssignment_10_2; }
		
		//EffectOnCell
		public RuleCall getEffectsoncellEffectOnCellParserRuleCall_10_2_0() { return cEffectsoncellEffectOnCellParserRuleCall_10_2_0; }
		
		//( "," effectsoncell+=EffectOnCell)*
		public Group getGroup_10_3() { return cGroup_10_3; }
		
		//","
		public Keyword getCommaKeyword_10_3_0() { return cCommaKeyword_10_3_0; }
		
		//effectsoncell+=EffectOnCell
		public Assignment getEffectsoncellAssignment_10_3_1() { return cEffectsoncellAssignment_10_3_1; }
		
		//EffectOnCell
		public RuleCall getEffectsoncellEffectOnCellParserRuleCall_10_3_1_0() { return cEffectsoncellEffectOnCellParserRuleCall_10_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10_4() { return cRightCurlyBracketKeyword_10_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class CellStateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.ntnu.tdt4250.g07.bg.bgdl.BoardGameDL.CellState");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCellStateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//CellState returns CellState:
		//    'CellState' name=ID
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//'CellState' name=ID
		public Group getGroup() { return cGroup; }
		
		//'CellState'
		public Keyword getCellStateKeyword_0() { return cCellStateKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}
	public class WinConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.ntnu.tdt4250.g07.bg.bgdl.BoardGameDL.WinCondition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWinConditionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cInarowKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInarowAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInarowInARowParserRuleCall_3_0 = (RuleCall)cInarowAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//WinCondition returns WinCondition:
		//    'WinCondition'
		//    '{'
		//        'inarow' inarow=InARow
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'WinCondition'
		//'{'
		//    'inarow' inarow=InARow
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'WinCondition'
		public Keyword getWinConditionKeyword_0() { return cWinConditionKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'inarow'
		public Keyword getInarowKeyword_2() { return cInarowKeyword_2; }
		
		//inarow=InARow
		public Assignment getInarowAssignment_3() { return cInarowAssignment_3; }
		
		//InARow
		public RuleCall getInarowInARowParserRuleCall_3_0() { return cInarowInARowParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.ntnu.tdt4250.g07.bg.bgdl.BoardGameDL.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//    '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.ntnu.tdt4250.g07.bg.bgdl.BoardGameDL.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class ValidMoveElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.ntnu.tdt4250.g07.bg.bgdl.BoardGameDL.ValidMove");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPlaceAnywhereAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPlaceAnywherePlaceAnywhereKeyword_0_0 = (Keyword)cPlaceAnywhereAssignment_0.eContents().get(0);
		private final Keyword cValidMoveKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cConditionsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cConditionsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cConditionsConditionParserRuleCall_3_2_0 = (RuleCall)cConditionsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cConditionsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cConditionsConditionParserRuleCall_3_3_1_0 = (RuleCall)cConditionsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ValidMove returns ValidMove:
		//    placeAnywhere?='placeAnywhere'
		//    'ValidMove'
		//    '{'
		//        ('conditions' '{' conditions+=Condition ( "," conditions+=Condition)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//placeAnywhere?='placeAnywhere'
		//'ValidMove'
		//'{'
		//    ('conditions' '{' conditions+=Condition ( "," conditions+=Condition)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//placeAnywhere?='placeAnywhere'
		public Assignment getPlaceAnywhereAssignment_0() { return cPlaceAnywhereAssignment_0; }
		
		//'placeAnywhere'
		public Keyword getPlaceAnywherePlaceAnywhereKeyword_0_0() { return cPlaceAnywherePlaceAnywhereKeyword_0_0; }
		
		//'ValidMove'
		public Keyword getValidMoveKeyword_1() { return cValidMoveKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('conditions' '{' conditions+=Condition ( "," conditions+=Condition)* '}' )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'conditions'
		public Keyword getConditionsKeyword_3_0() { return cConditionsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//conditions+=Condition
		public Assignment getConditionsAssignment_3_2() { return cConditionsAssignment_3_2; }
		
		//Condition
		public RuleCall getConditionsConditionParserRuleCall_3_2_0() { return cConditionsConditionParserRuleCall_3_2_0; }
		
		//( "," conditions+=Condition)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//conditions+=Condition
		public Assignment getConditionsAssignment_3_3_1() { return cConditionsAssignment_3_3_1; }
		
		//Condition
		public RuleCall getConditionsConditionParserRuleCall_3_3_1_0() { return cConditionsConditionParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class EffectOnCellElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.ntnu.tdt4250.g07.bg.bgdl.BoardGameDL.EffectOnCell");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEffectOnCellKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cXKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXEIntParserRuleCall_3_0 = (RuleCall)cXAssignment_3.eContents().get(0);
		private final Keyword cYKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cYAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cYEIntParserRuleCall_5_0 = (RuleCall)cYAssignment_5.eContents().get(0);
		private final Keyword cCellstateKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cCellstateAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cCellstateCellStateCrossReference_7_0 = (CrossReference)cCellstateAssignment_7.eContents().get(0);
		private final RuleCall cCellstateCellStateEStringParserRuleCall_7_0_1 = (RuleCall)cCellstateCellStateCrossReference_7_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//EffectOnCell returns EffectOnCell:
		//    'EffectOnCell'
		//    '{'
		//        'x' x=EInt
		//        'y' y=EInt
		//        'cellstate' cellstate=[CellState|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'EffectOnCell'
		//'{'
		//    'x' x=EInt
		//    'y' y=EInt
		//    'cellstate' cellstate=[CellState|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'EffectOnCell'
		public Keyword getEffectOnCellKeyword_0() { return cEffectOnCellKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'x'
		public Keyword getXKeyword_2() { return cXKeyword_2; }
		
		//x=EInt
		public Assignment getXAssignment_3() { return cXAssignment_3; }
		
		//EInt
		public RuleCall getXEIntParserRuleCall_3_0() { return cXEIntParserRuleCall_3_0; }
		
		//'y'
		public Keyword getYKeyword_4() { return cYKeyword_4; }
		
		//y=EInt
		public Assignment getYAssignment_5() { return cYAssignment_5; }
		
		//EInt
		public RuleCall getYEIntParserRuleCall_5_0() { return cYEIntParserRuleCall_5_0; }
		
		//'cellstate'
		public Keyword getCellstateKeyword_6() { return cCellstateKeyword_6; }
		
		//cellstate=[CellState|EString]
		public Assignment getCellstateAssignment_7() { return cCellstateAssignment_7; }
		
		//[CellState|EString]
		public CrossReference getCellstateCellStateCrossReference_7_0() { return cCellstateCellStateCrossReference_7_0; }
		
		//EString
		public RuleCall getCellstateCellStateEStringParserRuleCall_7_0_1() { return cCellstateCellStateEStringParserRuleCall_7_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class ConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.ntnu.tdt4250.g07.bg.bgdl.BoardGameDL.Condition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConditionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cCellstateKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cCellstateAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cCellstateCellStateCrossReference_3_0 = (CrossReference)cCellstateAssignment_3.eContents().get(0);
		private final RuleCall cCellstateCellStateEStringParserRuleCall_3_0_1 = (RuleCall)cCellstateCellStateCrossReference_3_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Condition returns Condition:
		//    'Condition'
		//    '{'
		//        'cellstate' cellstate=[CellState|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Condition'
		//'{'
		//    'cellstate' cellstate=[CellState|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Condition'
		public Keyword getConditionKeyword_0() { return cConditionKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'cellstate'
		public Keyword getCellstateKeyword_2() { return cCellstateKeyword_2; }
		
		//cellstate=[CellState|EString]
		public Assignment getCellstateAssignment_3() { return cCellstateAssignment_3; }
		
		//[CellState|EString]
		public CrossReference getCellstateCellStateCrossReference_3_0() { return cCellstateCellStateCrossReference_3_0; }
		
		//EString
		public RuleCall getCellstateCellStateEStringParserRuleCall_3_0_1() { return cCellstateCellStateEStringParserRuleCall_3_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.ntnu.tdt4250.g07.bg.bgdl.BoardGameDL.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class InARowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.ntnu.tdt4250.g07.bg.bgdl.BoardGameDL.InARow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDiagonalAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cDiagonalDiagonalKeyword_0_0 = (Keyword)cDiagonalAssignment_0.eContents().get(0);
		private final Assignment cHorizontalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cHorizontalHorizontalKeyword_1_0 = (Keyword)cHorizontalAssignment_1.eContents().get(0);
		private final Assignment cVerticalAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cVerticalVerticalKeyword_2_0 = (Keyword)cVerticalAssignment_2.eContents().get(0);
		private final Keyword cInARowKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cCountKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cCountAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cCountEIntParserRuleCall_6_0 = (RuleCall)cCountAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//InARow returns InARow:
		//    diagonal?='diagonal'
		//    horizontal?='horizontal'
		//    vertical?='vertical'
		//    'InARow'
		//    '{'
		//        'count' count=EInt
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//diagonal?='diagonal'
		//horizontal?='horizontal'
		//vertical?='vertical'
		//'InARow'
		//'{'
		//    'count' count=EInt
		//'}'
		public Group getGroup() { return cGroup; }
		
		//diagonal?='diagonal'
		public Assignment getDiagonalAssignment_0() { return cDiagonalAssignment_0; }
		
		//'diagonal'
		public Keyword getDiagonalDiagonalKeyword_0_0() { return cDiagonalDiagonalKeyword_0_0; }
		
		//horizontal?='horizontal'
		public Assignment getHorizontalAssignment_1() { return cHorizontalAssignment_1; }
		
		//'horizontal'
		public Keyword getHorizontalHorizontalKeyword_1_0() { return cHorizontalHorizontalKeyword_1_0; }
		
		//vertical?='vertical'
		public Assignment getVerticalAssignment_2() { return cVerticalAssignment_2; }
		
		//'vertical'
		public Keyword getVerticalVerticalKeyword_2_0() { return cVerticalVerticalKeyword_2_0; }
		
		//'InARow'
		public Keyword getInARowKeyword_3() { return cInARowKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//'count'
		public Keyword getCountKeyword_5() { return cCountKeyword_5; }
		
		//count=EInt
		public Assignment getCountAssignment_6() { return cCountAssignment_6; }
		
		//EInt
		public RuleCall getCountEIntParserRuleCall_6_0() { return cCountEIntParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	
	
	private final BoardGameElements pBoardGame;
	private final PieceTypeElements pPieceType;
	private final CellStateElements pCellState;
	private final WinConditionElements pWinCondition;
	private final EIntElements pEInt;
	private final EStringElements pEString;
	private final ValidMoveElements pValidMove;
	private final EffectOnCellElements pEffectOnCell;
	private final ConditionElements pCondition;
	private final EBooleanElements pEBoolean;
	private final InARowElements pInARow;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public BoardGameDLGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pBoardGame = new BoardGameElements();
		this.pPieceType = new PieceTypeElements();
		this.pCellState = new CellStateElements();
		this.pWinCondition = new WinConditionElements();
		this.pEInt = new EIntElements();
		this.pEString = new EStringElements();
		this.pValidMove = new ValidMoveElements();
		this.pEffectOnCell = new EffectOnCellElements();
		this.pCondition = new ConditionElements();
		this.pEBoolean = new EBooleanElements();
		this.pInARow = new InARowElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("no.ntnu.tdt4250.g07.bg.bgdl.BoardGameDL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//BoardGame returns BoardGame:
	//    'BoardGame'
	//    '{'
	//        'size' size=EInt
	//        'piecetypes' '{' piecetypes+=PieceType ( "," piecetypes+=PieceType)* '}'
	//        ('cellstates' '{' cellstates+=CellState ( "," cellstates+=CellState)* '}' )?
	//        'winConditions' '{' winConditions+=WinCondition ( "," winConditions+=WinCondition)* '}'
	//    '}';
	public BoardGameElements getBoardGameAccess() {
		return pBoardGame;
	}
	
	public ParserRule getBoardGameRule() {
		return getBoardGameAccess().getRule();
	}
	
	//PieceType returns PieceType:
	//    'PieceType'
	//    name=EString
	//    '{'
	//        'symbol' symbol=EString
	//        'validmoves' '{' validmoves+=ValidMove ( "," validmoves+=ValidMove)* '}'
	//        ('effectsoncell' '{' effectsoncell+=EffectOnCell ( "," effectsoncell+=EffectOnCell)* '}' )?
	//    '}';
	public PieceTypeElements getPieceTypeAccess() {
		return pPieceType;
	}
	
	public ParserRule getPieceTypeRule() {
		return getPieceTypeAccess().getRule();
	}
	
	//CellState returns CellState:
	//    'CellState' name=ID
	//    ;
	public CellStateElements getCellStateAccess() {
		return pCellState;
	}
	
	public ParserRule getCellStateRule() {
		return getCellStateAccess().getRule();
	}
	
	//WinCondition returns WinCondition:
	//    'WinCondition'
	//    '{'
	//        'inarow' inarow=InARow
	//    '}';
	public WinConditionElements getWinConditionAccess() {
		return pWinCondition;
	}
	
	public ParserRule getWinConditionRule() {
		return getWinConditionAccess().getRule();
	}
	
	//EInt returns ecore::EInt:
	//    '-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//ValidMove returns ValidMove:
	//    placeAnywhere?='placeAnywhere'
	//    'ValidMove'
	//    '{'
	//        ('conditions' '{' conditions+=Condition ( "," conditions+=Condition)* '}' )?
	//    '}';
	public ValidMoveElements getValidMoveAccess() {
		return pValidMove;
	}
	
	public ParserRule getValidMoveRule() {
		return getValidMoveAccess().getRule();
	}
	
	//EffectOnCell returns EffectOnCell:
	//    'EffectOnCell'
	//    '{'
	//        'x' x=EInt
	//        'y' y=EInt
	//        'cellstate' cellstate=[CellState|EString]
	//    '}';
	public EffectOnCellElements getEffectOnCellAccess() {
		return pEffectOnCell;
	}
	
	public ParserRule getEffectOnCellRule() {
		return getEffectOnCellAccess().getRule();
	}
	
	//Condition returns Condition:
	//    'Condition'
	//    '{'
	//        'cellstate' cellstate=[CellState|EString]
	//    '}';
	public ConditionElements getConditionAccess() {
		return pCondition;
	}
	
	public ParserRule getConditionRule() {
		return getConditionAccess().getRule();
	}
	
	//EBoolean returns ecore::EBoolean:
	//    'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//InARow returns InARow:
	//    diagonal?='diagonal'
	//    horizontal?='horizontal'
	//    vertical?='vertical'
	//    'InARow'
	//    '{'
	//        'count' count=EInt
	//    '}';
	public InARowElements getInARowAccess() {
		return pInARow;
	}
	
	public ParserRule getInARowRule() {
		return getInARowAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
