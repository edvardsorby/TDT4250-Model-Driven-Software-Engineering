// automatically generated by Xtext
grammar no.ntnu.tdt4250.g07.bg.bgdl.BoardGameDL with org.eclipse.xtext.common.Terminals

import "platform:/resource/no.ntnu.tdt4250.g07.bg/model/bg.ecore"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

BoardGame returns BoardGame:
	'Title' (name = EString)
	'BoardSize' size=EInt
	
	'pieceTypes' '['piecetypes+=PieceType ( "," piecetypes+=PieceType)* ']'
	('cellStates' '['cellstates+=CellState ( "," cellstates+=CellState)*']' )?
	'winConditions' '[' winConditions+=WinCondition ( "," winConditions+=WinCondition)* ']' 
	;

PieceType returns PieceType:
	'PieceType'
	name=EString
		'Symbol' symbol=EString
		'hasValidMovesWhen' '[' validmoves+=ValidMove ( "," validmoves+=ValidMove)* ']' 
		('hasEffectOnCell' '[' effectsoncell+=EffectOnCell ( "," effectsoncell+=EffectOnCell)* ']' )?;

CellState returns CellState:
	name=ID
	;

WinCondition returns WinCondition:
		'InARow' inarow=InARow;

EInt returns ecore::EInt:
	'-'? INT;

EString returns ecore::EString:
	STRING | ID;

ValidMove returns ValidMove:
	'ValidMove'
	'{'
		placeAnywhere?='placeAnywhere'
		('when' conditions+=Condition ( "and" conditions+=Condition)* )?
	'}';

EffectOnCell returns EffectOnCell:
	'effect' '->' '('
		'relativePosition' '('x=EInt','y=EInt')'
		'newCellState''('cellstate=[CellState|EString]')' ')';

Condition returns Condition:
		'cellstate' '->' cellstate=[CellState|EString];

EBoolean returns ecore::EBoolean:
	'true' | 'false';

InARow returns InARow:
	horizontal?='horizontal'
	vertical?='vertical'
	diagonal?='diagonal'
	'count' count=EInt;
