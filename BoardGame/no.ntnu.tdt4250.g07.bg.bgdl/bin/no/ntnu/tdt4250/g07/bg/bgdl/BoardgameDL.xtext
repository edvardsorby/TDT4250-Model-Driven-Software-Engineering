// automatically generated by Xtext
grammar no.ntnu.tdt4250.g07.bg.bgdl.BoardgameDL with org.eclipse.xtext.common.Terminals

import "platform:/resource/no.ntnu.tdt4250.g07.bg/model/bg.ecore"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore


BoardGame returns BoardGame:
	piecetypes+=PieceType* 
	cellstate+=CellState* 
	wincondition+=WinCondition*
	'Size' size=EInt;
	
EString returns ecore::EString:
	STRING | ID;

PieceType returns PieceType:
	'PieceType'
	name=EString
	'{'
		'symbol' symbol=EString
		'validmove' '{' validmove+=ValidMove ( "," validmove+=ValidMove)* '}' 
		('effectoncell' '{' effectoncell+=EffectOnCell ( "," effectoncell+=EffectOnCell)* '}' )?
	'}';

CellState returns CellState:
	{CellState}
	'CellState'
	;

WinCondition returns WinCondition:
	'WinCondition'
	'{'
		'inarow' inarow=InARow
	'}';

ValidMove returns ValidMove:
	placeAnywhere?='placeAnywhere'
	'ValidMove'
	'{'
		('condition' '{' condition+=Condition ( "," condition+=Condition)* '}' )?
	'}';

EffectOnCell returns EffectOnCell:
	'EffectOnCell'
	'{'
		'x' x=EInt
		'y' y=EInt
		'cellstate' cellstate=[CellState|EString]
	'}';

Condition returns Condition:
	{Condition}
	'Condition'
	'{'
		('cellstate' '(' cellstate+=[CellState|EString] ( "," cellstate+=[CellState|EString])* ')' )?
	'}';

EBoolean returns ecore::EBoolean:
	'true' | 'false';

EInt returns ecore::EInt:
	'-'? INT;

InARow returns InARow:
	diagonal?='diagonal'
	horizontal?='horizontal'
	vertical?='vertical'
	'InARow'
	'{'
		'count' count=EInt
	'}';