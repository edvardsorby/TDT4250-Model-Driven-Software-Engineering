/*
 * generated by Xtext
 */
grammar InternalBoardGameDL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package no.ntnu.tdt4250.g07.bg.bgdl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package no.ntnu.tdt4250.g07.bg.bgdl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import no.ntnu.tdt4250.g07.bg.bgdl.services.BoardGameDLGrammarAccess;

}

@parser::members {

 	private BoardGameDLGrammarAccess grammarAccess;

    public InternalBoardGameDLParser(TokenStream input, BoardGameDLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "BoardGame";
   	}

   	@Override
   	protected BoardGameDLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleBoardGame
entryRuleBoardGame returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoardGameRule()); }
	iv_ruleBoardGame=ruleBoardGame
	{ $current=$iv_ruleBoardGame.current; }
	EOF;

// Rule BoardGame
ruleBoardGame returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Title'
		{
			newLeafNode(otherlv_0, grammarAccess.getBoardGameAccess().getTitleKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBoardGameAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBoardGameRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"no.ntnu.tdt4250.g07.bg.bgdl.BoardGameDL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='BoardSize'
		{
			newLeafNode(otherlv_2, grammarAccess.getBoardGameAccess().getBoardSizeKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBoardGameAccess().getSizeEIntParserRuleCall_3_0());
				}
				lv_size_3_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBoardGameRule());
					}
					set(
						$current,
						"size",
						lv_size_3_0,
						"no.ntnu.tdt4250.g07.bg.bgdl.BoardGameDL.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBoardGameAccess().getBoardGameElementsBoardGameElementParserRuleCall_4_0());
				}
				lv_boardGameElements_4_0=ruleBoardGameElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBoardGameRule());
					}
					add(
						$current,
						"boardGameElements",
						lv_boardGameElements_4_0,
						"no.ntnu.tdt4250.g07.bg.bgdl.BoardGameDL.BoardGameElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleBoardGameElement
entryRuleBoardGameElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoardGameElementRule()); }
	iv_ruleBoardGameElement=ruleBoardGameElement
	{ $current=$iv_ruleBoardGameElement.current; }
	EOF;

// Rule BoardGameElement
ruleBoardGameElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBoardGameElementAccess().getPieceTypeParserRuleCall_0());
		}
		this_PieceType_0=rulePieceType
		{
			$current = $this_PieceType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBoardGameElementAccess().getEffectOnCellParserRuleCall_1());
		}
		this_EffectOnCell_1=ruleEffectOnCell
		{
			$current = $this_EffectOnCell_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBoardGameElementAccess().getValidMoveParserRuleCall_2());
		}
		this_ValidMove_2=ruleValidMove
		{
			$current = $this_ValidMove_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBoardGameElementAccess().getCellStateParserRuleCall_3());
		}
		this_CellState_3=ruleCellState
		{
			$current = $this_CellState_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBoardGameElementAccess().getWinConditionParserRuleCall_4());
		}
		this_WinCondition_4=ruleWinCondition
		{
			$current = $this_WinCondition_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBoardGameElementAccess().getConditionParserRuleCall_5());
		}
		this_Condition_5=ruleCondition
		{
			$current = $this_Condition_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePieceType
entryRulePieceType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPieceTypeRule()); }
	iv_rulePieceType=rulePieceType
	{ $current=$iv_rulePieceType.current; }
	EOF;

// Rule PieceType
rulePieceType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PieceType'
		{
			newLeafNode(otherlv_0, grammarAccess.getPieceTypeAccess().getPieceTypeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPieceTypeAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPieceTypeRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"no.ntnu.tdt4250.g07.bg.bgdl.BoardGameDL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPieceTypeAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='Symbol'
		{
			newLeafNode(otherlv_3, grammarAccess.getPieceTypeAccess().getSymbolKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPieceTypeAccess().getSymbolEStringParserRuleCall_4_0());
				}
				lv_symbol_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPieceTypeRule());
					}
					set(
						$current,
						"symbol",
						lv_symbol_4_0,
						"no.ntnu.tdt4250.g07.bg.bgdl.BoardGameDL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='ValidMoves'
		{
			newLeafNode(otherlv_5, grammarAccess.getPieceTypeAccess().getValidMovesKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPieceTypeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getPieceTypeAccess().getValidMovesValidMoveCrossReference_6_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getPieceTypeAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPieceTypeRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getPieceTypeAccess().getValidMovesValidMoveCrossReference_7_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_9='EffectsOnCell'
			{
				newLeafNode(otherlv_9, grammarAccess.getPieceTypeAccess().getEffectsOnCellKeyword_8_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPieceTypeRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getPieceTypeAccess().getEffectsoncellEffectOnCellCrossReference_8_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11=','
				{
					newLeafNode(otherlv_11, grammarAccess.getPieceTypeAccess().getCommaKeyword_8_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPieceTypeRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getPieceTypeAccess().getEffectsoncellEffectOnCellCrossReference_8_2_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getPieceTypeAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleCellState
entryRuleCellState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCellStateRule()); }
	iv_ruleCellState=ruleCellState
	{ $current=$iv_ruleCellState.current; }
	EOF;

// Rule CellState
ruleCellState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Cellstate'
		{
			newLeafNode(otherlv_0, grammarAccess.getCellStateAccess().getCellstateKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCellStateAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCellStateRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"no.ntnu.tdt4250.g07.bg.bgdl.BoardGameDL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleWinCondition
entryRuleWinCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWinConditionRule()); }
	iv_ruleWinCondition=ruleWinCondition
	{ $current=$iv_ruleWinCondition.current; }
	EOF;

// Rule WinCondition
ruleWinCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='WinCondition'
		{
			newLeafNode(otherlv_0, grammarAccess.getWinConditionAccess().getWinConditionKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getWinConditionAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWinConditionAccess().getWinConditionElementsWinConditionElementParserRuleCall_2_0());
				}
				lv_winConditionElements_2_0=ruleWinConditionElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWinConditionRule());
					}
					add(
						$current,
						"winConditionElements",
						lv_winConditionElements_2_0,
						"no.ntnu.tdt4250.g07.bg.bgdl.BoardGameDL.WinConditionElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getWinConditionAccess().getWinConditionElementsWinConditionElementParserRuleCall_3_0());
				}
				lv_winConditionElements_3_0=ruleWinConditionElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWinConditionRule());
					}
					add(
						$current,
						"winConditionElements",
						lv_winConditionElements_3_0,
						"no.ntnu.tdt4250.g07.bg.bgdl.BoardGameDL.WinConditionElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getWinConditionAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleValidMove
entryRuleValidMove returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValidMoveRule()); }
	iv_ruleValidMove=ruleValidMove
	{ $current=$iv_ruleValidMove.current; }
	EOF;

// Rule ValidMove
ruleValidMove returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ValidMove'
		{
			newLeafNode(otherlv_0, grammarAccess.getValidMoveAccess().getValidMoveKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getValidMoveAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValidMoveRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getValidMoveAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				lv_placeAnywhere_3_0='placeAnywhere'
				{
					newLeafNode(lv_placeAnywhere_3_0, grammarAccess.getValidMoveAccess().getPlaceAnywherePlaceAnywhereKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValidMoveRule());
					}
					setWithLastConsumed($current, "placeAnywhere", lv_placeAnywhere_3_0 != null, "placeAnywhere");
				}
			)
		)
		(
			otherlv_4='valid'
			{
				newLeafNode(otherlv_4, grammarAccess.getValidMoveAccess().getValidKeyword_4_0());
			}
			otherlv_5='if'
			{
				newLeafNode(otherlv_5, grammarAccess.getValidMoveAccess().getIfKeyword_4_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValidMoveRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getValidMoveAccess().getConditionsConditionCrossReference_4_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7='and'
				{
					newLeafNode(otherlv_7, grammarAccess.getValidMoveAccess().getAndKeyword_4_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getValidMoveRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getValidMoveAccess().getConditionsConditionCrossReference_4_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getValidMoveAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleEffectOnCell
entryRuleEffectOnCell returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEffectOnCellRule()); }
	iv_ruleEffectOnCell=ruleEffectOnCell
	{ $current=$iv_ruleEffectOnCell.current; }
	EOF;

// Rule EffectOnCell
ruleEffectOnCell returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='EffectOnCell'
		{
			newLeafNode(otherlv_0, grammarAccess.getEffectOnCellAccess().getEffectOnCellKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEffectOnCellAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEffectOnCellRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEffectOnCellAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getEffectOnCellAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEffectOnCellAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getEffectOnCellAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>(otherlv_4='relativePosition'
								{
									newLeafNode(otherlv_4, grammarAccess.getEffectOnCellAccess().getRelativePositionKeyword_3_0_0());
								}
								otherlv_5='('
								{
									newLeafNode(otherlv_5, grammarAccess.getEffectOnCellAccess().getLeftParenthesisKeyword_3_0_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getEffectOnCellAccess().getXEIntParserRuleCall_3_0_2_0());
										}
										lv_x_6_0=ruleEInt
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getEffectOnCellRule());
											}
											set(
												$current,
												"x",
												lv_x_6_0,
												"no.ntnu.tdt4250.g07.bg.bgdl.BoardGameDL.EInt");
											afterParserOrEnumRuleCall();
										}
									)
								)
								otherlv_7=','
								{
									newLeafNode(otherlv_7, grammarAccess.getEffectOnCellAccess().getCommaKeyword_3_0_3());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getEffectOnCellAccess().getYEIntParserRuleCall_3_0_4_0());
										}
										lv_y_8_0=ruleEInt
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getEffectOnCellRule());
											}
											set(
												$current,
												"y",
												lv_y_8_0,
												"no.ntnu.tdt4250.g07.bg.bgdl.BoardGameDL.EInt");
											afterParserOrEnumRuleCall();
										}
									)
								)
								otherlv_9=')'
								{
									newLeafNode(otherlv_9, grammarAccess.getEffectOnCellAccess().getRightParenthesisKeyword_3_0_5());
								}
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEffectOnCellAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEffectOnCellAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getEffectOnCellAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>(otherlv_10='newCellState'
								{
									newLeafNode(otherlv_10, grammarAccess.getEffectOnCellAccess().getNewCellStateKeyword_3_1_0());
								}
								(
									(
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getEffectOnCellRule());
											}
										}
										{
											newCompositeNode(grammarAccess.getEffectOnCellAccess().getCellStateCellStateCrossReference_3_1_1_0());
										}
										ruleEString
										{
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEffectOnCellAccess().getUnorderedGroup_3());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getEffectOnCellAccess().getUnorderedGroup_3())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getEffectOnCellAccess().getUnorderedGroup_3());
				}
		)
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getEffectOnCellAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Condition'
		{
			newLeafNode(otherlv_0, grammarAccess.getConditionAccess().getConditionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getConditionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getConditionAccess().getCellStateCellStateCrossReference_2_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleWinConditionElement
entryRuleWinConditionElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWinConditionElementRule()); }
	iv_ruleWinConditionElement=ruleWinConditionElement
	{ $current=$iv_ruleWinConditionElement.current; }
	EOF;

// Rule WinConditionElement
ruleWinConditionElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getWinConditionElementAccess().getLineParserRuleCall());
	}
	this_Line_0=ruleLine
	{
		$current = $this_Line_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleLine
entryRuleLine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLineRule()); }
	iv_ruleLine=ruleLine
	{ $current=$iv_ruleLine.current; }
	EOF;

// Rule Line
ruleLine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Line'
		{
			newLeafNode(otherlv_0, grammarAccess.getLineAccess().getLineKeyword_0());
		}
		otherlv_1='length'
		{
			newLeafNode(otherlv_1, grammarAccess.getLineAccess().getLengthKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLineAccess().getLengthEIntParserRuleCall_2_0());
				}
				lv_length_2_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLineRule());
					}
					set(
						$current,
						"length",
						lv_length_2_0,
						"no.ntnu.tdt4250.g07.bg.bgdl.BoardGameDL.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='direction'
		{
			newLeafNode(otherlv_3, grammarAccess.getLineAccess().getDirectionKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLineAccess().getDirectionDirectionEnumRuleCall_4_0());
				}
				lv_direction_4_0=ruleDirection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLineRule());
					}
					set(
						$current,
						"direction",
						lv_direction_4_0,
						"no.ntnu.tdt4250.g07.bg.bgdl.BoardGameDL.Direction");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Rule Direction
ruleDirection returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='ROW'
			{
				$current = grammarAccess.getDirectionAccess().getROWEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDirectionAccess().getROWEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='COLUMN'
			{
				$current = grammarAccess.getDirectionAccess().getCOLUMNEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDirectionAccess().getCOLUMNEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='DIAGONAL'
			{
				$current = grammarAccess.getDirectionAccess().getDIAGONALEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDirectionAccess().getDIAGONALEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
