/*
 * generated by Xtext 2.35.0
 */
package no.ntnu.tdt4250.g07.bg.bgdl.formatting2

import com.google.inject.Inject
import no.ntnu.tdt4250.g07.bg.BoardGame
import no.ntnu.tdt4250.g07.bg.PieceType
import no.ntnu.tdt4250.g07.bg.bgdl.services.BoardGameDLGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class BoardGameDLFormatter extends AbstractFormatter2 {
	
	@Inject extension BoardGameDLGrammarAccess

	def dispatch void format(BoardGame boardGame, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (pieceType : boardGame.piecetypes) {
			pieceType.format
		}
		for (cellState : boardGame.cellstates) {
			cellState.format
		}
		for (winCondition : boardGame.winConditions) {
			winCondition.format
		}
	}

	def dispatch void format(PieceType pieceType, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (validMove : pieceType.validmoves) {
			validMove.format
		}
		for (effectOnCell : pieceType.effectsoncell) {
			effectOnCell.format
		}
	}
	
	// TODO: implement for WinCondition, ValidMove
}
